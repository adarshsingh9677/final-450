Problem link: https://leetcode.com/problems/combination-sum/



class Solution {
public:
    
    void cs(vector<int> &cnd, vector<int> &temp, vector<vector<int>> &ans, int target,int ind,int n)
    {
        if(target<0)
            return;
        if(ind==n)
        {
            if(target==0)
            {
                ans.push_back(temp);
            }
            return;
        }
        
        if(cnd[ind]<=target)
        {
            temp.push_back(cnd[ind]);
            cs(cnd,temp,ans,target-cnd[ind],ind,n);
            temp.pop_back();
        }
        cs(cnd,temp,ans,target,ind+1,n);
        
    }
    
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int> >ans;
        vector<int> temp;
        cs(candidates,temp,ans,target,0,candidates.size());
        return ans;
    }
};
