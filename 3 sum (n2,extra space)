Problem link: https://leetcode.com/problems/3sum/ 


class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> ans;
        int n=nums.size();
        sort(nums.begin(),nums.end());
        set< vector<int> > store;
        for(int i=0;i<n;i++)
        {
            cout<<nums[i]<<" ";
        }
        cout<<endl;
        for(int i=0;i<n-2;i++)
        {
            int l=i+1,r=n-1;
            
            while(l<r)
            {
                int sum=nums[i]+nums[l]+nums[r];
                if(sum==0)
                {
                    vector<int>temp={nums[i], nums[l], nums[r]};
                    store.insert(temp);
                    l++;
                    r--;
                }
                else if(sum<0)
                {
                    l++;
                }
                else
                {
                    r--;
                }
            }
        }
        for(auto x: store)
        {
            ans.push_back(x);
        }
        return ans;
    }
};
