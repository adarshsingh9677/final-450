Problem link: https://leetcode.com/problems/set-matrix-zeroes/

#include<bits/stdc++.h>
using namespace std;

void solve(vector<vector<int> > &v,int n, int m)
{
    vector<int> r(n,0),c(m,0);
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            if(v[i][j]== 0)
            {
                r[i]=1;
                c[j]=1;
            }
        }
    }
    
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            if(r[i]==1 || c[j] == 1)
            {
                v[i][j]=0;
            }
        }
    }
    
}
int main() {
    int m,n;
    cin>>n>>m;
    vector < vector < int >> arr(n, vector<int> (m) );
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            cin>>arr[i][j];
        }
    }
    solve(arr,n,m);
    cout<<"The Final Matrix is "<<endl;
    for (int i = 0; i < n; i++) {
    for (int j = 0; j < m; j++) {
      cout << arr[i][j] << " ";
    }
    cout << "\n";
    }
}





Space effecient soln:




#include<bits/stdc++.h>
using namespace std;

void solve(vector<vector<int> > &v,int n, int m)
{
    int col0=1;
    for(int i=0;i<n;i++)
    {
        if(v[i][0]==0)
            col0 = 0;
        for(int j=1;j<m;j++)
        {
            if(v[i][j]== 0)
            {
                v[0][j]=0;
                v[i][0]=0;    
            }
        }
    }
    
    for(int i=n-1;i>=0;i--)
    {
        for(int j=m-1;j>=1;j--)
        {
            if(v[i][0]==0 || v[0][j] == 0)
            {
                v[i][j]=0;
            }
        }
        if(col0==0)
        {
            v[i][0]=0;
        }
    }
    
}
int main() {
    int m,n;
    cin>>n>>m;
    vector < vector < int >> arr(n, vector<int> (m) );
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            cin>>arr[i][j];
        }
    }
    solve(arr,n,m);
    cout<<"The Final Matrix is "<<endl;
    for (int i = 0; i < n; i++) {
    for (int j = 0; j < m; j++) {
      cout << arr[i][j] << " ";
    }
    cout << "\n";
    }
}


