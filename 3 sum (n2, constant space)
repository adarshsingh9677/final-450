Problem link: https://leetcode.com/problems/3sum/



class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> ans;
        int n=nums.size();
        sort(nums.begin(),nums.end());
        for(int i=0;i<n;i++)
        {
            cout<<nums[i]<<" ";
        }
        cout<<endl;
        for(int i=0;i<n-2;i++)
        {
            if(i==0 || (i>0 && nums[i-1]!=nums[i]))
            {
                int l=i+1,r=n-1;
            
                while(l<r)
                {
                    int sum=nums[i]+nums[l]+nums[r];
                    if(sum==0)
                    {
                        vector<int>temp={nums[i], nums[l], nums[r]};
                        ans.push_back(temp);
                        while(l<r && nums[l]==nums[l+1]) l++;
                        while(l<r && nums[r]==nums[r-1]) r--;
                        l++;
                        r--;
                    }
                    else if(sum<0)
                    {
                        l++;
                    }
                    else
                    {
                        r--;
                    }
                }
            }
                
        }
        return ans;
    }
};
