Problem link: https://leetcode.com/problems/balanced-binary-tree/


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int balanceh(TreeNode* root,int level,bool &ans)
    {
        if(root==NULL)
        {
            return 0;
        }
        int lefth = balanceh(root->left,level+1,ans);
        int righth = balanceh(root->right,level+1,ans);
        if(abs(lefth-righth)<=1)
        {
            ans= ans& true;
        }
        else
        {
            ans = ans& false;
        }
        return 1+ max(lefth,righth);
    }
    bool isBalanced(TreeNode* root) {
        bool ans=true;
        balanceh(root,0,ans);
        return ans;
    }
};
