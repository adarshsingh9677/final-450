Problem link: https://leetcode.com/problems/combination-sum-ii/



class Solution {
public:
    void cssum2(vector<int>& cnd, vector<int> &temp, vector<vector<int>> &ans, int target,int ind,int n)
    {
        if(target==0)
        {
            ans.push_back(temp);
            return;
        }
        for(int i=ind;i<n;i++)
        {
            if(i>ind && cnd[i]==cnd[i-1])
            {
                continue;
            }
            if(target>=cnd[i])
            {
                temp.push_back(cnd[i]);
                cssum2(cnd,temp,ans,target-cnd[i],i+1,n);
                temp.pop_back();
            }
            
        }
    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        sort(candidates.begin(),candidates.end());
        vector<vector<int>> ans;
        vector<int> temp;
        cssum2(candidates,temp,ans,target,0,candidates.size());
        return ans;
    }
};
