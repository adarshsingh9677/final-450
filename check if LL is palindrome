Problem link: https://leetcode.com/problems/palindrome-linked-list/


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool checkPalindrome(ListNode* h1,ListNode* &h2)
    {
        if(h1==NULL)
            return true;
        bool first = checkPalindrome(h1->next,h2),second;
        if(h1->val==h2->val)
        {
            second=true;
            h2=h2->next;
        }
        else
        {
            second=false;
        }
        return first&second;
            
    }
    bool isPalindrome(ListNode* head) {
        if(head==NULL || head->next==NULL)
            return true;
        return checkPalindrome(head,head);
        
    }
};
