Problem link: https://leetcode.com/problems/binary-tree-level-order-traversal/



/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int height(TreeNode* root, int level)
    {
        if(root==NULL)
        {
            return 0;
        }
        return max( height(root->left,level+1), height(root->right,level+1) )+1;
    }
    
    void pushlevel(TreeNode*root, vector<int> &temp,int level)
    {
        if(root==NULL)
        {
            return;
        }
        if(level==0)
        {
            temp.push_back(root->val);
        }
        pushlevel(root->left,temp,level-1);
        pushlevel(root->right,temp,level-1);
    }
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        int h = height(root,0);
        vector<int> temp;
        for(int i=0;i<h;i++)
        {
            pushlevel(root,temp,i);
            ans.push_back(temp);
            temp.clear();
        }
        return ans;
    }
};
