Problem link: https://leetcode.com/problems/binary-tree-right-side-view/



/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void solve(TreeNode *root, vector<int> &ans,int lvl, int &maxlvl)
    {
        if(root==NULL)
        {
            return;
        }
        if(lvl>maxlvl)
        {
            ans.push_back(root->val);
            maxlvl++;
        }
        
        solve(root->right,ans,lvl+1,maxlvl);
        solve(root->left,ans,lvl+1,maxlvl);
    }
    vector<int> rightSideView(TreeNode* root) {
        vector<int> ans;
    if(root==NULL)
        return ans;
    int maxlvl=-1;
    solve(root,ans,0,maxlvl);
    return ans;
    }
};
