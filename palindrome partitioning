Problem link: https://leetcode.com/problems/palindrome-partitioning/



class Solution {
public:
    bool ispalindrome(string s,int start,int end)
    {
        int n=s.size();
        for(int i=start,j=end;i<=j;i++,j--)
        {
            if(s[i]!=s[j])
            {
                return false;
            }
        }
        return true;
    }
    
    void pp(string s,vector<string> &temp, vector<vector<string>> &ans, int ind,int n)
    {
        if(ind==n)
        {
            ans.push_back(temp);
            return;
        }
        for(int i=ind;i<n;i++)
        {
            if(ispalindrome(s,ind,i))
            {
                temp.push_back(s.substr(ind,i-ind+1));
                pp(s,temp,ans,i+1,n);
                temp.pop_back();
            }
        }
    }
    vector<vector<string>> partition(string s) {
        vector<vector<string>> ans;
        vector<string> temp;
        pp(s,temp,ans,0,s.size());
        return ans;
    }
};
