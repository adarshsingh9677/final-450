Problem link: https://practice.geeksforgeeks.org/problems/top-view-of-binary-tree/1#



vector<int> topView(Node *root)
    {
        vector<int> ans;
        if(root==NULL)
            return ans;
        map<int, int> store;
        queue< pair< Node*,int > > q;
        q.push( {root,0} );
        while(!q.empty())
        {
            auto it=q.front();
            q.pop();
            Node* temp=it.first;
            int vertical=it.second;
            if(store.find(vertical)==store.end())
            {
                store[vertical] = temp->data;
            }
            if(temp->left!=NULL)
            {
                q.push( {temp->left,vertical-1} );
            }
            if(temp->right!=NULL)
            {
                q.push( {temp->right,vertical+1} );
            }
        }
        for(auto x: store)
        {
            ans.push_back(x.second);
        }
        return ans;
    }
