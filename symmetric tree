Problem link: https://leetcode.com/problems/symmetric-tree/



/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool checkboth(TreeNode *leftsub, TreeNode *rightsub)
    {
        if(leftsub==NULL && rightsub==NULL)
        {
            return true;
        }
        if(leftsub==NULL && rightsub!=NULL)
        {
            return false;
        }
        if(leftsub!=NULL && rightsub==NULL)
        {
            return false;
        }
        if(leftsub->val==rightsub->val)
        {
            return checkboth(leftsub->left,rightsub->right) && checkboth(leftsub->right,rightsub->left);
        }
        return false;
    }
    
    bool isSymmetric(TreeNode* root) {
        if(root==NULL)
            return true;
            
        return checkboth(root->left,root->right);
        
    }
};
