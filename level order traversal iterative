Problem link:  https://leetcode.com/problems/binary-tree-level-order-traversal/



/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        if(root==NULL)
        {
            return ans;
        }
        queue<TreeNode*> q;
        q.push(root);
        int count=1,c=0;
        vector<int> temp;
        temp.push_back(root->val);
        while(!q.empty())
        {
            ans.push_back(temp);
            temp.clear();
            while(!q.empty() && count--)
            {
                TreeNode* elem=q.front();
                q.pop();
                if(elem->left!=NULL)
                {
                    q.push(elem->left);
                    temp.push_back(elem->left->val);
                    c++;
                }
                if(elem->right!=NULL)
                {
                    q.push(elem->right);
                    temp.push_back(elem->right->val);
                    c++;
                }
            }
            count=c;
            c=0;
        }
        return ans;
    }
};
