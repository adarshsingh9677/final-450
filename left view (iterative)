Problem link: https://practice.geeksforgeeks.org/problems/left-view-of-binary-tree/1#



/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        vector<int> ans;
    if(root==NULL)
        return ans;
   queue<TreeNode*> q;
   q.push(root);
   int count=1,c=0;
   
   while(!q.empty())
   {
       c=0;
       ans.push_back(q.back()->val);
       while(!q.empty() && count--)
       {
           TreeNode*temp =q.front();
           q.pop();
           if(temp->left!=NULL)
           {
               q.push(temp->left);
               c++;
           }
           if(temp->right!=NULL)
           {
               q.push(temp->right);
               c++;
           }
       }
       count=c;
   }
   return ans;
    }
};
